export default class SubjectLog{static get logStates(){return null==window.__subjectLogStates__&&(window.__subjectLogStates__={silent:!1}),window.__subjectLogStates__}static get logPrefix(){return window.__subjectLogPrefix__||""}static set logPrefix(t){window.__subjectLogPrefix__=t}static createSubjects(t,e){let o=_sanitizeLogSubjects(t);null!=e&&(SubjectLog.logPrefix=e);for(let t=0;t<o.length;t++){let e=o[t];Object.defineProperty(console.log,e,{get(){if(1==SubjectLog.logStates.silent)return function(){};let t=SubjectLog.logPrefix.replace(/%subject/g,e);if(!0===SubjectLog.logStates.all)return Function.prototype.bind.call(console.log,console,t);let o=SubjectLog.logStates[e.toLowerCase()];return null==o?(console.warn(`Unknown log subject provided: ${e}`),function(){}):0==o?function(){}:Function.prototype.bind.call(console.log,console,t)}}),SubjectLog.logStates[e]="all"!==e}}static setSubjectState(t,e){SubjectLog.logStates[t]=!0===e}};function _sanitizeLogSubjects(t){if(null==t)return[];if(!Array.isArray(t)){if("[object String]"===Object.prototype.toString.call(t))throw new Error("The logSubjects must be an array of strings.");t=[t]}return t.map(t=>{if("[object String]"!==Object.prototype.toString.call(t))throw new Error('All log subjects must be of the type "string".');return t.toLowerCase()}),-1==t.indexOf("all")&&t.unshift("all"),t}